import 'package:flutter/material.dart';
import 'package:confetti/confetti.dart';
import 'welcome_screen.dart';

const List<Map<String, dynamic>> funAvatars = [
  {'id': 'astronaut', 'icon': Icons.rocket_launch, 'color': Colors.blue},
  {'id': 'wizard', 'icon': Icons.auto_fix_high, 'color': Colors.purple},
  {'id': 'adventurer', 'icon': Icons.hiking, 'color': Colors.green},
  {'id': 'explorer', 'icon': Icons.compass_calibration, 'color': Colors.orange},
  {'id': 'pirate', 'icon': Icons.sailing, 'color': Colors.brown},
];

class SuccessScreen extends StatefulWidget {
  final String selectedAvatarId;
  final List<String> achievedBadges;

  const SuccessScreen({
    super.key,
    required this.selectedAvatarId,
    required this.achievedBadges,
  });

  @override
  State<SuccessScreen> createState() => _SuccessScreenState();
}

class _SuccessScreenState extends State<SuccessScreen> {
  late final ConfettiController _confettiController;

  @override
  void initState() {
    super.initState();
    _confettiController = ConfettiController(duration: const Duration(seconds: 5));
    _confettiController.play();
  }

  @override
  void dispose() {
    _confettiController.dispose();
    super.dispose();
  }

  Widget _buildAvatarDisplay() {
    final avatarData = funAvatars.firstWhere(
      (a) => a['id'] == widget.selectedAvatarId,
      orElse: () => {'icon': Icons.person, 'color': Colors.grey},
    );

    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        shape: BoxShape.circle,
        color: avatarData['color'].withOpacity(0.1),
        border: Border.all(color: avatarData['color'], width: 5),
      ),
      child: Icon(
        avatarData['icon'] as IconData,
        size: 80,
        color: avatarData['color'] as Color,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.indigo.shade50,
      body: Stack(
        children: [
          Align(
            alignment: Alignment.topCenter,
            child: ConfettiWidget(
              confettiController: _confettiController,
              blastDirectionality: BlastDirectionality.explosive,
              shouldLoop: false,
              colors: const [
                Colors.indigo,
                Colors.purple,
                Colors.green,
                Colors.amber,
              ],
              minimumSize: const Size(10, 10),
              maximumSize: const Size(30, 30),
            ),
          ),
          
          Center(
            child: SingleChildScrollView(
              padding: const EdgeInsets.all(32.0),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  _buildAvatarDisplay(),
                  const SizedBox(height: 30),

                  const Text(
                    'Adventure Unlocked!',
                    style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold, color: Colors.indigo),
                  ),
                  const SizedBox(height: 10),
                  const Text(
                    'Welcome! Your profile is complete and your quest begins now.',
                    style: TextStyle(fontSize: 18, color: Colors.black87),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 40),

                  if (widget.achievedBadges.isNotEmpty) ...[
                    const Text(
                      'Achievements Unlocked:',
                      style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 15),
                    Wrap(
                      spacing: 10,
                      runSpacing: 10,
                      alignment: WrapAlignment.center,
                      children: widget.achievedBadges.map((badge) {
                        return Chip(
                          avatar: const Icon(Icons.star, color: Colors.amber),
                          label: Text(badge),
                          backgroundColor: Colors.amber.shade100,
                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                        );
                      }).toList(),
                    ),
                    const SizedBox(height: 40),
                  ],
                  
                  ElevatedButton(
                    onPressed: () {
                      Navigator.pushAndRemoveUntil(
                        context,
                        MaterialPageRoute(builder: (context) => const WelcomeScreen()),
                        (Route<dynamic> route) => false,
                      );
                    },
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.indigo,
                    ),
                    child: const Text('Start Main Quest'),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
